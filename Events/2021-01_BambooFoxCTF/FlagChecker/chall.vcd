$date
	Sat Jan 16 07:54:25 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module t_chall $end
$var wire 8 ! out [7:0] $end
$var reg 1 " clk $end
$var reg 8 # idx [7:0] $end
$var reg 8 $ inp [7:0] $end
$var reg 1 % ok $end
$var reg 1 & rst $end
$var reg 8 ' tmp [7:0] $end
$scope module ch $end
$var wire 1 " clk $end
$var wire 8 ( inp [7:0] $end
$var wire 1 & rst $end
$var wire 2 ) val3 [1:0] $end
$var wire 2 * val2 [1:0] $end
$var wire 2 + val1 [1:0] $end
$var wire 2 , val0 [1:0] $end
$var wire 8 - res3 [7:0] $end
$var wire 8 . res2 [7:0] $end
$var wire 8 / res1 [7:0] $end
$var wire 8 0 res0 [7:0] $end
$var reg 8 1 res [7:0] $end
$scope module m0 $end
$var wire 1 " clk $end
$var wire 8 2 inp [7:0] $end
$var wire 1 & rst $end
$var wire 2 3 val [1:0] $end
$var reg 8 4 res [7:0] $end
$upscope $end
$scope module m1 $end
$var wire 1 " clk $end
$var wire 8 5 inp [7:0] $end
$var wire 1 & rst $end
$var wire 2 6 val [1:0] $end
$var reg 8 7 res [7:0] $end
$upscope $end
$scope module m2 $end
$var wire 1 " clk $end
$var wire 8 8 inp [7:0] $end
$var wire 1 & rst $end
$var wire 2 9 val [1:0] $end
$var reg 8 : res [7:0] $end
$upscope $end
$scope module m3 $end
$var wire 1 " clk $end
$var wire 8 ; inp [7:0] $end
$var wire 1 & rst $end
$var wire 2 < val [1:0] $end
$var reg 8 = res [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
x&
x%
bx $
bx #
0"
bx !
$end
#100
1&
#200
b10110110 !
b10110110 1
b10110110 -
b10110110 =
b10101101 .
b10101101 :
b10101101 ;
b1110110 /
b1110110 7
b1110110 8
b10011101 0
b10011101 4
b10011101 5
b10 ,
b10 3
b1 +
b1 6
b10 *
b10 9
b1 )
b1 <
b0 #
1%
b10110110 '
b1100110 $
b1100110 (
b1100110 2
0&
1"
#400
0"
#600
b11000111 !
b11000111 1
b11000111 -
b11000111 =
b11110001 .
b11110001 :
b11110001 ;
b10111010 /
b10111010 7
b10111010 8
b0 ,
b0 3
b11 +
b11 6
b10001101 0
b10001101 4
b10001101 5
1"
b11000111 '
b1101100 $
b1101100 (
b1101100 2
b1 #
#800
0"
#1000
b10011111 !
b10011111 1
b10011111 -
b10011111 =
b11100111 .
b11100111 :
b11100111 ;
b10110000 /
b10110000 7
b10110000 8
b1 ,
b1 3
b0 +
b0 6
b10000101 0
b10000101 4
b10000101 5
1"
b10011111 '
b1100001 $
b1100001 (
b1100001 2
b10 #
#1200
0"
#1400
b11100001 !
b11100001 1
b11100001 -
b11100001 =
b1111000 .
b1111000 :
b1111000 ;
b1000001 /
b1000001 7
b1000001 8
b11 ,
b11 3
b1 +
b1 6
b1010000 0
b1010000 4
b1010000 5
1"
b11100001 '
b1100111 $
b1100111 (
b1100111 2
b11 #
#1600
0"
#1800
b11010010 !
b11010010 1
b11010010 -
b11010010 =
b10110100 .
b10110100 :
b10110100 ;
b10000011 /
b10000011 7
b10000011 8
b10 +
b10 6
b11 *
b11 9
b1001100 0
b1001100 4
b1001100 5
1"
b11010010 '
b1111011 $
b1111011 (
b1111011 2
b100 #
#2000
0"
#2200
b110100 !
b110100 1
b110100 -
b110100 =
b1101 .
b1101 :
b1101 ;
b111010 /
b111010 7
b111010 8
b0 ,
b0 3
b1 +
b1 6
b10001110 0
b10001110 4
b10001110 5
1"
b110 '
b1110100 $
b1110100 (
b1110100 2
b101 #
#2300
0%
#2400
0"
#2600
b11101101 !
b11101101 1
b11101101 -
b11101101 =
b1111011 .
b1111011 :
b1111011 ;
b1000100 /
b1000100 7
b1000100 8
b10 +
b10 6
b10 *
b10 9
b1101 0
b1101 4
b1101 5
1"
b11110110 '
b1101000 $
b1101000 (
b1101000 2
b110 #
#2800
0"
#3000
b1001100 !
b1001100 1
b1001100 -
b1001100 =
b10011 .
b10011 :
b10011 ;
b11011100 /
b11011100 7
b11011100 8
b1 ,
b1 3
b10100101 0
b10100101 4
b10100101 5
1"
b1000 '
b1101001 $
b1101001 (
b1101001 2
b111 #
#3200
0"
#3400
b11111110 !
b11111110 1
b11111110 -
b11111110 =
b10111111 .
b10111111 :
b10111111 ;
b10001000 /
b10001000 7
b10001000 8
b11 ,
b11 3
b0 +
b0 6
b11 *
b11 9
b1000100 0
b1000100 4
b1000100 5
1"
b10101100 '
b1110011 $
b1110011 (
b1110011 2
b1000 #
#3600
0"
#3800
b11110101 !
b11110101 1
b11110101 -
b11110101 =
b1111101 .
b1111101 :
b1111101 ;
b1011111 /
b1011111 7
b1011111 8
b11 +
b11 6
b1 *
b1 9
b1101000 0
b1101000 4
b1101000 5
1"
b11110101 '
b1011111 $
b1011111 (
b1011111 2
b1001 #
#4000
0"
#4200
b1001100 !
b1001100 1
b1001100 -
b1001100 =
b10011 .
b10011 :
b10011 ;
b11011100 /
b11011100 7
b11011100 8
b1 ,
b1 3
b10 +
b10 6
b10 *
b10 9
b10100101 0
b10100101 4
b10100101 5
1"
b110 '
b1101001 $
b1101001 (
b1101001 2
b1010 #
#4400
0"
#4600
b11111110 !
b11111110 1
b11111110 -
b11111110 =
b10111111 .
b10111111 :
b10111111 ;
b10001000 /
b10001000 7
b10001000 8
b11 ,
b11 3
b0 +
b0 6
b11 *
b11 9
b1000100 0
b1000100 4
b1000100 5
1"
b11110110 '
b1110011 $
b1110011 (
b1110011 2
b1011 #
#4800
0"
#5000
b11110101 !
b11110101 1
b11110101 -
b11110101 =
b1111101 .
b1111101 :
b1111101 ;
b1011111 /
b1011111 7
b1011111 8
b11 +
b11 6
b1 *
b1 9
b1101000 0
b1101000 4
b1101000 5
1"
b1000 '
b1011111 $
b1011111 (
b1011111 2
b1100 #
#5200
0"
#5400
b10110110 !
b10110110 1
b10110110 -
b10110110 =
b10101101 .
b10101101 :
b10101101 ;
b1110110 /
b1110110 7
b1110110 8
b10 ,
b10 3
b1 +
b1 6
b10 *
b10 9
b10011101 0
b10011101 4
b10011101 5
1"
b11110101 '
b1100110 $
b1100110 (
b1100110 2
b1101 #
#5600
0"
#5800
b10011111 !
b10011111 1
b10011111 -
b10011111 =
b11100111 .
b11100111 :
b11100111 ;
b10110000 /
b10110000 7
b10110000 8
b1 ,
b1 3
b0 +
b0 6
b10000101 0
b10000101 4
b10000101 5
1"
b11000111 '
b1100001 $
b1100001 (
b1100001 2
b1110 #
#6000
0"
#6200
b101011 !
b101011 1
b101011 -
b101011 =
b11001010 .
b11001010 :
b11001010 ;
b10010011 /
b10010011 7
b10010011 8
b11 ,
b11 3
b10 +
b10 6
b1011100 0
b1011100 4
b1011100 5
1"
b10011010 '
b1101011 $
b1101011 (
b1101011 2
b1111 #
#6400
0"
#6600
b110110 !
b110110 1
b110110 -
b110110 =
b10001101 .
b10001101 :
b10001101 ;
b1010110 /
b1010110 7
b1010110 8
b1 ,
b1 3
b1 +
b1 6
b10010101 0
b10010101 4
b10010101 5
1"
b11100001 '
b1100101 $
b1100101 (
b1100101 2
b10000 #
#6800
0"
#7000
b11110101 !
b11110101 1
b11110101 -
b11110101 =
b1111101 .
b1111101 :
b1111101 ;
b1011111 /
b1011111 7
b1011111 8
b11 ,
b11 3
b11 +
b11 6
b1 *
b1 9
b1101000 0
b1101000 4
b1101000 5
1"
b11110101 '
b1011111 $
b1011111 (
b1011111 2
b10001 #
#7200
0"
#7400
b10110110 !
b10110110 1
b10110110 -
b10110110 =
b10101101 .
b10101101 :
b10101101 ;
b1110110 /
b1110110 7
b1110110 8
b10 ,
b10 3
b1 +
b1 6
b10 *
b10 9
b10011101 0
b10011101 4
b10011101 5
1"
b10110110 '
b1100110 $
b1100110 (
b1100110 2
b10010 #
#7600
0"
#7800
b10011111 !
b10011111 1
b10011111 -
b10011111 =
b11100111 .
b11100111 :
b11100111 ;
b10110000 /
b10110000 7
b10110000 8
b1 ,
b1 3
b0 +
b0 6
b10000101 0
b10000101 4
b10000101 5
1"
b11110101 '
b1100001 $
b1100001 (
b1100001 2
b10011 #
#8000
0"
#8200
b101011 !
b101011 1
b101011 -
b101011 =
b11001010 .
b11001010 :
b11001010 ;
b10010011 /
b10010011 7
b10010011 8
b11 ,
b11 3
b10 +
b10 6
b1011100 0
b1011100 4
b1011100 5
1"
b10100101 '
b1101011 $
b1101011 (
b1101011 2
b10100 #
#8400
0"
#8600
b110110 !
b110110 1
b110110 -
b110110 =
b10001101 .
b10001101 :
b10001101 ;
b1010110 /
b1010110 7
b1010110 8
b1 ,
b1 3
b1 +
b1 6
b10010101 0
b10010101 4
b10010101 5
1"
b11100001 '
b1100101 $
b1100101 (
b1100101 2
b10101 #
#8800
0"
#9000
b11110101 !
b11110101 1
b11110101 -
b11110101 =
b1111101 .
b1111101 :
b1111101 ;
b1011111 /
b1011111 7
b1011111 8
b11 ,
b11 3
b11 +
b11 6
b1 *
b1 9
b1101000 0
b1101000 4
b1101000 5
1"
b11110101 '
b1011111 $
b1011111 (
b1011111 2
b10110 #
#9200
0"
#9400
b10110110 !
b10110110 1
b10110110 -
b10110110 =
b10101101 .
b10101101 :
b10101101 ;
b1110110 /
b1110110 7
b1110110 8
b10 ,
b10 3
b1 +
b1 6
b10 *
b10 9
b10011101 0
b10011101 4
b10011101 5
1"
b111 '
b1100110 $
b1100110 (
b1100110 2
b10111 #
#9600
0"
#9800
b10011111 !
b10011111 1
b10011111 -
b10011111 =
b11100111 .
b11100111 :
b11100111 ;
b10110000 /
b10110000 7
b10110000 8
b1 ,
b1 3
b0 +
b0 6
b10000101 0
b10000101 4
b10000101 5
1"
b11101101 '
b1100001 $
b1100001 (
b1100001 2
b11000 #
#10000
0"
#10200
b101011 !
b101011 1
b101011 -
b101011 =
b11001010 .
b11001010 :
b11001010 ;
b10010011 /
b10010011 7
b10010011 8
b11 ,
b11 3
b10 +
b10 6
b1011100 0
b1011100 4
b1011100 5
1"
b11110110 '
b1101011 $
b1101011 (
b1101011 2
b11001 #
#10400
0"
#10600
b110110 !
b110110 1
b110110 -
b110110 =
b10001101 .
b10001101 :
b10001101 ;
b1010110 /
b1010110 7
b1010110 8
b1 ,
b1 3
b1 +
b1 6
b10010101 0
b10010101 4
b10010101 5
1"
b111 '
b1100101 $
b1100101 (
b1100101 2
b11010 #
#10800
0"
#11000
b11110101 !
b11110101 1
b11110101 -
b11110101 =
b1111101 .
b1111101 :
b1111101 ;
b1011111 /
b1011111 7
b1011111 8
b11 ,
b11 3
b11 +
b11 6
b1 *
b1 9
b1101000 0
b1101000 4
b1101000 5
1"
b101011 '
b1011111 $
b1011111 (
b1011111 2
b11011 #
#11200
0"
#11400
b11000111 .
b11000111 :
b11000111 ;
b11111000 !
b11111000 1
b11111000 -
b11111000 =
b10010000 /
b10010000 7
b10010000 8
b1 ,
b1 3
b0 +
b0 6
b10 *
b10 9
b0 )
b0 <
b10000100 0
b10000100 4
b10000100 5
1"
b11110110 '
b100001 $
b100001 (
b100001 2
b11100 #
#11600
0"
#11800
1"
b1000 '
b11101 #
#12000
0"
#12200
1"
b11111000 '
b11110 #
#12400
0"
#12600
b11110101 .
b11110101 :
b11110101 ;
b11010111 !
b11010111 1
b11010111 -
b11010111 =
b11000010 /
b11000010 7
b11000010 8
b11 +
b11 6
b11 *
b11 9
b1 )
b1 <
b11110101 0
b11110101 4
b11110101 5
1"
b11010111 '
b1111101 $
b1111101 (
b1111101 2
b11111 #
#12800
0"
#13000
1"
b100000 #
